From 5bbb32ee2c1da9d8075f3a45010dd88bd0990a5b Mon Sep 17 00:00:00 2001
From: flandolf <66240551+flandolf@users.noreply.github.com>
Date: Sun, 10 Aug 2025 20:19:40 +1000
Subject: [PATCH] add haptics control

Change-Id: Id2124c0081c90b293f9f01258cc32d5504bb5559
---
 res/values/arrays.xml                         | 14 ++++
 res/values/config.xml                         |  3 +
 res/values/strings.xml                        |  3 +
 ...ssibility_vibration_intensity_settings.xml |  7 ++
 res/xml/accessibility_vibration_settings.xml  |  7 ++
 .../HapticStyleListPreference.java            | 23 ++++++
 .../HapticStylePreferenceController.java      | 79 +++++++++++++++++++
 7 files changed, 136 insertions(+)
 create mode 100644 src/com/android/settings/accessibility/HapticStyleListPreference.java
 create mode 100644 src/com/android/settings/accessibility/HapticStylePreferenceController.java

diff --git a/res/values/arrays.xml b/res/values/arrays.xml
index 80c3e8d2c4b..2f4a45f72b4 100644
--- a/res/values/arrays.xml
+++ b/res/values/arrays.xml
@@ -1647,4 +1647,18 @@
     <!-- Packages that will not show Display over other apps permission -->
     <string-array name="display_over_apps_permission_change_exempt">
     </string-array>
+
+    <!-- Haptic Effect Styles -->
+    <string-array name="haptic_effect_style_entries" translatable="false">
+        <item>RichTap</item>
+        <item>Crisp</item>
+        <item>Gentle</item>
+    </string-array>
+
+    <string-array name="haptic_effect_style_values" translatable="false">
+        <item>richtap</item>
+        <item>crisp</item>
+        <item>gentle</item>
+    </string-array>
+
 </resources>
diff --git a/res/values/config.xml b/res/values/config.xml
index 1177b5cb8aa..fc0a75d843c 100644
--- a/res/values/config.xml
+++ b/res/values/config.xml
@@ -856,4 +856,7 @@
 
     <!-- Whether the Gaze is enabled -->
     <bool name="config_gazeEnabled">false</bool>
+
+    <!-- Show haptic styles -->
+    <bool name="config_supportHapticProfiles" translatable="false">false</bool>
 </resources>
diff --git a/res/values/strings.xml b/res/values/strings.xml
index 774e776022b..6bf2f521f34 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -14399,4 +14399,7 @@ Data usage charges may apply.</string>
     <!-- Title for supervision PIN verification screen [CHAR LIMIT=60] -->
     <string name="supervision_full_screen_pin_verification_title">Enter supervision PIN</string>
     <string name="accessibility_illustration_content_description"><xliff:g id="feature" example="Select to Speak">%1$s</xliff:g> animation</string>
+
+    <!-- Haptic Effect Style -->
+    <string name="haptic_effect_style_title">Haptic effect style</string>
 </resources>
diff --git a/res/xml/accessibility_vibration_intensity_settings.xml b/res/xml/accessibility_vibration_intensity_settings.xml
index 17e9f93b7b9..2066d843453 100644
--- a/res/xml/accessibility_vibration_intensity_settings.xml
+++ b/res/xml/accessibility_vibration_intensity_settings.xml
@@ -65,6 +65,13 @@
         android:key="vibration_intensity_category_haptics"
         android:title="@string/accessibility_interactive_haptics_category_title">
 
+        <com.android.settings.accessibility.HapticStyleListPreference
+            android:key="haptic_style"
+            android:title="@string/haptic_effect_style_title"
+            android:entries="@array/haptic_effect_style_entries"
+            android:entryValues="@array/haptic_effect_style_values"
+            app:controller="com.android.settings.accessibility.HapticStylePreferenceController" />
+
         <com.android.settingslib.widget.SliderPreference
             android:key="vibration_intensity_preference_touch"
             android:title="@string/accessibility_touch_vibration_title"
diff --git a/res/xml/accessibility_vibration_settings.xml b/res/xml/accessibility_vibration_settings.xml
index be45659b310..7590713f533 100644
--- a/res/xml/accessibility_vibration_settings.xml
+++ b/res/xml/accessibility_vibration_settings.xml
@@ -65,6 +65,13 @@
         android:key="vibration_category_haptics"
         android:title="@string/accessibility_interactive_haptics_category_title">
 
+         <com.android.settings.accessibility.HapticStyleListPreference
+            android:key="haptic_style"
+            android:title="@string/haptic_effect_style_title"
+            android:entries="@array/haptic_effect_style_entries"
+            android:entryValues="@array/haptic_effect_style_values"
+            app:controller="com.android.settings.accessibility.HapticStylePreferenceController" />
+
         <SwitchPreferenceCompat
             android:key="vibration_preference_touch"
             android:title="@string/accessibility_touch_vibration_title"
diff --git a/src/com/android/settings/accessibility/HapticStyleListPreference.java b/src/com/android/settings/accessibility/HapticStyleListPreference.java
new file mode 100644
index 00000000000..2ee30f49a91
--- /dev/null
+++ b/src/com/android/settings/accessibility/HapticStyleListPreference.java
@@ -0,0 +1,23 @@
+package com.android.settings.accessibility;
+
+import android.content.Context;
+import android.os.SystemProperties;
+import android.provider.Settings;
+import android.util.AttributeSet;
+import androidx.preference.ListPreference;
+
+public class HapticStyleListPreference extends ListPreference {
+    private static final String PROP_KEY = "persist.sys.haptic_profile";
+    private static final String SETTINGS_KEY = Settings.Secure.HAPTIC_EFFECTS_PROFILE;
+
+    public HapticStyleListPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    @Override
+    public void setValue(String value) {
+        super.setValue(value);
+        SystemProperties.set(PROP_KEY, value);
+	Settings.Secure.putString(getContext().getContentResolver(), SETTINGS_KEY, value);
+    }
+}
\ No newline at end of file
diff --git a/src/com/android/settings/accessibility/HapticStylePreferenceController.java b/src/com/android/settings/accessibility/HapticStylePreferenceController.java
new file mode 100644
index 00000000000..3698115f7d8
--- /dev/null
+++ b/src/com/android/settings/accessibility/HapticStylePreferenceController.java
@@ -0,0 +1,79 @@
+package com.android.settings.accessibility;
+
+import android.content.Context;
+import android.os.SystemProperties;
+import android.provider.Settings;
+import androidx.preference.ListPreference;
+import androidx.preference.Preference;
+import androidx.preference.PreferenceScreen;
+
+import com.android.settings.core.BasePreferenceController;
+import com.android.settings.R;
+
+public class HapticStylePreferenceController extends BasePreferenceController
+        implements Preference.OnPreferenceChangeListener {
+
+    private static final String PROP_KEY = "debug.haptic_profile";
+    private static final String SETTINGS_KEY = Settings.Secure.HAPTIC_EFFECTS_PROFILE;
+    private ListPreference mPreference;
+
+    public HapticStylePreferenceController(Context context, String preferenceKey) {
+        super(context, preferenceKey);
+    }
+
+    @Override
+    public int getAvailabilityStatus() {
+        return mContext.getResources().getBoolean(R.bool.config_supportHapticProfiles) ? AVAILABLE : UNSUPPORTED_ON_DEVICE;
+    }
+
+    @Override
+    public void displayPreference(PreferenceScreen screen) {
+        super.displayPreference(screen);
+        Preference pref = screen.findPreference(getPreferenceKey());
+        if (pref instanceof ListPreference) {
+            mPreference = (ListPreference) pref;
+            mPreference.setOnPreferenceChangeListener(this);
+            updateState(mPreference);
+        }
+    }
+
+    @Override
+    public void updateState(Preference preference) {
+        super.updateState(preference);
+        if (preference instanceof ListPreference) {
+            ListPreference listPref = (ListPreference) preference;
+            String currentValue = Settings.Secure.getString(mContext.getContentResolver(), SETTINGS_KEY);
+
+            // If the property is empty, use the first entry value as default
+            if (currentValue == null || currentValue.isEmpty()) {
+                CharSequence[] entryValues = listPref.getEntryValues();
+                if (entryValues != null && entryValues.length > 0) {
+                    currentValue = entryValues[0].toString();
+                    listPref.setValue(currentValue);
+                    SystemProperties.set(PROP_KEY, currentValue);
+		    Settings.Secure.putString(mContext.getContentResolver(), SETTINGS_KEY, currentValue);
+                }
+            } else {
+                listPref.setValue(currentValue);
+            }
+
+            int index = listPref.findIndexOfValue(currentValue);
+            if (index >= 0) {
+                preference.setSummary(listPref.getEntries()[index]);
+            }
+        }
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        if (!(preference instanceof ListPreference)) return false;
+        String value = (String) newValue;
+        SystemProperties.set(PROP_KEY, value);
+        Settings.Secure.putString(mContext.getContentResolver(), SETTINGS_KEY, value);
+        int index = mPreference.findIndexOfValue(value);
+        if (index >= 0) {
+            mPreference.setSummary(mPreference.getEntries()[index]);
+        }
+        return true;
+    }
+}
\ No newline at end of file
-- 
2.48.1

