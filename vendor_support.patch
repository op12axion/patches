From 1efa4fb07a4a3822fd39bbbfda0dd64418b533be Mon Sep 17 00:00:00 2001
From: flandolf <66240551+flandolf@users.noreply.github.com>
Date: Fri, 5 Sep 2025 21:25:54 +1000
Subject: [PATCH] refactor: update RAM calculation to use decimal GB and
 simplify rounding
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Rather than using an approximation, just round using the memory info. Use decimal GB (1,000,000,000 bytes) instead of binary GiB (1,073,741,824 bytes) to match the capacity shown on the box (e.g., 24 GB instead of 23 GiB).

Test: About phone and see correct ram amount. My device has 24GB of ram and previously stated 32GB.
---
 .../android/settings/utils/DeviceInfoUtil.kt    | 17 ++++++-----------
 1 file changed, 6 insertions(+), 11 deletions(-)

diff --git a/src/com/android/settings/utils/DeviceInfoUtil.kt b/src/com/android/settings/utils/DeviceInfoUtil.kt
index 79f6ebf..0f91ed7 100644
--- a/src/com/android/settings/utils/DeviceInfoUtil.kt
+++ b/src/com/android/settings/utils/DeviceInfoUtil.kt
@@ -49,19 +49,14 @@ object DeviceInfoUtil {
   fun getTotalRam(): String {
     val memInfoReader = MemInfoReader()
     memInfoReader.readMemInfo()
+
+    // Use decimal GB (1 GB = 1,000,000,000 bytes) for RAM as per common marketing practice
     val totalMemoryBytes = memInfoReader.totalSize
-    val totalMemoryGB = totalMemoryBytes / (1024.0 * 1024.0 * 1024.0)
-    val roundedMemoryGB = roundToNearestKnownRamSize(totalMemoryGB)
-    return "$roundedMemoryGB GB"
-  }
+    val totalMemoryGB = totalMemoryBytes / (1000.0 * 1000.0 * 1000.0)
 
-  private fun roundToNearestKnownRamSize(memoryGB: Double): Int {
-    val knownSizes = arrayOf(1, 2, 3, 4, 6, 8, 10, 12, 16, 32, 48, 64)
-    if (memoryGB <= 0) return 1
-    for (size in knownSizes) {
-      if (memoryGB <= size) return size
-    }
-    return knownSizes.last()
+    // Round to the nearest whole GB
+    val rounded = totalMemoryGB.roundToInt().coerceAtLeast(1)
+    return "$rounded GB"
   }
 
   fun getStorageTotal(context: Context): String {
